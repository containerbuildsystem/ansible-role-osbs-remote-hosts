---
- name: Create group for user running rootless podman
  group:
    name: "{{ podman_user_group_name }}"
    gid: "{{ podman_user_group_gid }}"

- name: Create user for running rootless podman
  user:
    name: "{{ podman_user_name }}"
    uid: "{{ podman_user_uid }}"
    group: "{{ podman_user_group_name }}"

- name: Set subordinate user/group IDs for podman user
  lineinfile:
    path: "{{ item.path }}"
    line: "{{ item.line }}"
    regexp: "{{ item.regex }}"
    create: true
    state: present
    mode: 0644
  with_items:
    - path: "/etc/subuid"
      regex: "^{{ podman_user_name }}:"
      line: "{{ podman_user_name }}:{{ podman_user_subordinate_uid_start }}:{{ podman_user_subordinate_uid_count }}"
    - path: "/etc/subgid"
      regex: "^{{ podman_user_group_name }}:"
      line: "{{ podman_user_group_name }}:{{ podman_user_subordinate_gid_start }}:{{ podman_user_subordinate_gid_count }}"
  notify:
    - migrate podman containers

- name: Setup authorized keys for podman ssh user
  authorized_key:
    user: "{{ podman_ssh_user_name if podman_ssh_user_name is defined else podman_user_name }}"
    key: "{{ podman_ssh_user_public_key }}"
    manage_dir: true
  when: podman_ssh_user_public_key is defined

- name: Enable persistent user session to allow running long-running services without logged in
  command: loginctl enable-linger {{ podman_user_name }}
  changed_when: false

- name: Add podman ssh user to podman run user group
  user:
    name: "{{ podman_ssh_user_name }}"
    groups: "{{ podman_user_group_name }}"
    append: true
  when: podman_ssh_user_name is defined and podman_ssh_user_name != podman_user_name

- name: Install Podman on RHEL8 server
  dnf:
    name:
      - podman
    state: present

- name: Copy podman.socket systemd user config file
  template:
    src: "systemd/user/podman.socket.j2"
    dest: "/usr/lib/systemd/user/podman.socket"
    owner: root
    group: root
    mode: 0644
  notify:
    - reload systemd
    - restart rootless podman

- name: Create an empty mounts.conf to override podman default mounts
  # See also: man containers-mounts.conf (shipped by containers-common)
  # This is to avoid host repos being injected into OSBS image builds
  copy:
    content: ""
    dest: /etc/containers/mounts.conf
    force: true
    group: root
    owner: root
    mode: 0664

- name: Install machinectl to start podman service
  dnf:
    name:
      - systemd-container
    state: present

- name: Enable and start rootless podman.socket
  # rootless podman backend need to be started with a login session, so
  # ansible become methods ("sudo", "su" and etc) don't work in this
  # case, become method "machinectl" is not flexible enough to fulfill
  # the requirement either, run machinectl command as a workaround
  command: machinectl shell {{ podman_user_name }}@.host /usr/bin/systemctl --user enable --now podman.socket
  changed_when: false

- name: Add podman pruning cronjob
  ansible.builtin.cron:
    name: "podman pruner"
    minute: "{{ podman_pruning_interval_minutes }}"
    user: "{{ podman_user_name }}"
    job: 'podman system prune --all --filter "until={{ podman_pruning_until }}" -f'
